# download the vgsales table in EMR
aws s3 cp s3://data-eng-resources/big-data/vgsales.csv .

# This code should work but when I try to run it I get an error message saying 'The query is hanging and taking longer than expected'. I am then unable to run any more queries in Hive, much to my dismay.
I then have to reboot my cluster to try and run the code and it times out again. The 'Dismay Cycle' then repeats.
While dismay = True:
    dismay_cycle()
# UPDATE: I tried running this code again on Sunday morning and it looks like it works! Therefore dismay = False.

CREATE DATABASE vg;

SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.exec.max.dynamic.partitions = 10000;
SET hive.exec.max.dynamic.partitions.pernode = 10000;

DROP TABLE IF EXISTS vg.vgsales;
CREATE TABLE vg.vgsales (
  RankID INT,
  Name STRING,
  Release_year INT,
  Genre STRING,
  Publisher STRING,
  NA_Sales FLOAT,
  EU_Sales FLOAT,
  JP_Sales FLOAT,
  Other_Sales FLOAT,
  Global_Sales FLOAT
)
PARTITIONED BY (
  Platform STRING
)
CLUSTERED BY (
  Name
) INTO 8 BUCKETS
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','; 
-- This retains the required data types when inserting the data from the placeholder table.

DROP TABLE IF EXISTS vg.vgsales_placeholder;
CREATE TABLE vg.vgsales_placeholder (
  RankID INT,
  Name STRING,
  Platform STRING,
  Release_year INT,
  Genre STRING,
  Publisher STRING,
  NA_Sales FLOAT,
  EU_Sales FLOAT,
  JP_Sales FLOAT,
  Other_Sales FLOAT,
  Global_Sales FLOAT
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde' 
-- This converts everything to strings, to ensure the data is put in the correct columns.
STORED AS textfile
TBLPROPERTIES("skip.header.line.count"="1") 
-- Headers aren't required, as the columns have names
LOCATION '/home/hadoop/';

LOAD DATA LOCAL INPATH '/home/hadoop/vgsales.csv'
OVERWRITE INTO TABLE vg.vgsales_placeholder;

SELECT * FROM vg.vgsales_placeholder;

INSERT INTO TABLE vg.vgsales PARTITION (Platform)
SELECT RankID, Name, Release_year, Genre, Publisher, NA_Sales,
EU_Sales, JP_Sales, Other_Sales, Global_Sales, Platform
FROM vg.vgsales_placeholder WHERE RankID IS NOT NULL;

SELECT * FROM vg.vgsales;
DROP TABLE vg.vgsales_placeholder;
